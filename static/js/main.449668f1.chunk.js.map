{"version":3,"sources":["components/common/Header.js","components/home/Language.js","components/common/Loader.js","components/home/Home.js","actions/index.js","actions/types.js","components/about/About.js","components/projects/ProjectCard.js","components/projects/Projects.js","components/NotFound.js","components/Router.js","components/App.js","serviceWorker.js","reducers/index.js","reducers/languagesReducer.js","reducers/projectsReducer.js","index.js"],"names":["Header","className","to","Language","language","id","alt","src","process","image","href","name","description","Loader","title","Home","renderLanguages","props","languages","map","lang","key","this","fetchLanguages","length","React","Component","connect","state","type","payload","About","ProjectCard","project","details","url","rel","target","goals","goal","level","Projects","renderError","renderProjects","projects","parseInt","match","params","isNaN","fetchProjectsByLanguage","projectsCount","ownProps","filter","NotFound","window","location","origin","Router","path","exact","component","App","Boolean","hostname","combineReducers","action","store","createStore","reducers","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.449668f1.chunk.js","sourcesContent":["import React from \"react\";\nimport {Link} from 'react-router-dom';\n\nconst Header = () => (\n    <header className=\"ui stackable menu\">\n        <Link to=\"/\" className=\"header item\">Jayant Malik</Link>\n        <Link to=\"/\" className=\"item\">Programming Languages</Link>\n        <Link to=\"/about\" className=\"item\">About Me</Link>\n    </header>\n);\n\nexport default Header;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Language = ({ language }) => {\n    return (\n        <Link className=\"ui card\" to={`/language/${language.id}`}>\n            <div className=\"image\">\n                <img\n                    alt=\"language cover\"\n                    src={`${process.env.PUBLIC_URL}/images/languages/${language.image}`}\n                />\n            </div>\n            <div className=\"content\">\n                <p href=\"#\" className=\"header\">\n                    {language.name}\n                </p>\n                <div className=\"description\">{language.description}</div>\n            </div>\n        </Link>\n    );\n};\n\nexport default Language;\n","import React from 'react';\n\nconst Loader = ({title}) => {\n    return (\n        <div className=\"ui segment\">\n            <div className=\"ui active dimmer\">\n                <div className=\"ui text loader\">{title}</div>\n            </div>\n        </div>\n    )\n}\n\nexport default Loader;","import React from \"react\";\n\nimport Language from \"./Language\";\nimport Loader from \"../common/Loader\";\n\nimport { connect } from \"react-redux\";\nimport { fetchLanguages } from \"../../actions\";\n\nimport \"./Home.css\";\n\nclass Home extends React.Component {\n    componentDidMount() {\n        this.props.fetchLanguages();\n    }\n\n    renderLanguages = () => {\n        return this.props.languages.map((lang) => (\n            <Language key={lang.id} language={lang} />\n        ));\n    };\n\n    render() {\n        if (!this.props.languages.length) {\n            return <Loader title=\"Please wait, we are fetching languages...\" />;\n        }\n\n        return (\n            <main className=\"homepage\">\n                <div className=\"ui basic segment\">\n                    <section className=\"pusher\">\n                        <h2 className=\"heading\">Programming Languages</h2>\n                        <div className=\"ui link cards\">\n                            {this.renderLanguages()}\n                        </div>\n                    </section>\n                </div>\n            </main>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return { languages: state.languages };\n};\n\nexport default connect(mapStateToProps, { fetchLanguages })(Home);\n","import {languages} from '../data/languages.json';\nimport {projects} from '../data/projects.json';\n\nimport {\n    FETCH_LANGUAGES,\n    FETCH_PROJECTS,\n    FETCH_PROJECTS_BY_LANGUAGE\n} from './types';\n\n\nexport const fetchLanguages = () => {\n    return { type: FETCH_LANGUAGES, payload: languages };\n}\n\n\nexport const fetchProjects = () => {\n    return { type: FETCH_PROJECTS, payload: projects }\n}\n\n\nexport const fetchProjectsByLanguage = (language) => {\n    const project = projects.filter(project => project.language === language);\n    return {type: FETCH_PROJECTS_BY_LANGUAGE, payload: project};\n}\n","export const FETCH_LANGUAGES = 'FETCH_LANGUAGES';\nexport const FETCH_PROJECTS = 'FETCH_PROJECTS';\nexport const FETCH_PROJECT = 'FETCH_PROJECT';\nexport const FETCH_PROJECTS_BY_LANGUAGE = 'FETCH_PROJECTS_BY_LANGUAGE';\n","import React from 'react';\n\nconst About = () => {\n    return <h1>About</h1>\n}\n\n\nexport default About;","import React from \"react\";\n\nconst ProjectCard = ({ project }) => {\n    const { details } = project;\n\n    return (\n        <a href={project.url} rel=\"noopener noreferrer\" target=\"_blank\" className=\"ui card\">\n            <div className=\"image\">\n                <img\n                    alt=\"language cover\"\n                    src={`${process.env.PUBLIC_URL}/images/projects/${details.image}`}\n                />\n            </div>\n\n            <div className=\"content\">\n                <p className=\"header\">{details.title}</p>\n                <div className=\"description\">{details.description}</div>\n            </div>\n\n            <div className=\"extra content\">\n                <h3 className=\"header\">Goals</h3>\n                <ul className=\"ui divided list\">\n                    {details.goals.map((goal) => (\n                        <li key={goal} className=\"item\">\n                            {goal}\n                        </li>\n                    ))}\n                </ul>\n            </div>\n\n            <div className=\"extra content\">\n                Coding Level: <strong>{details.level}</strong>\n            </div>\n        </a>\n    );\n};\n\nexport default ProjectCard;\n","import React from \"react\";\n\nimport { connect } from \"react-redux\";\nimport { fetchProjectsByLanguage } from \"../../actions\";\nimport ProjectCard from \"./ProjectCard\";\n\nclass Projects extends React.Component {\n    componentDidMount() {\n        const id = parseInt(this.props.match.params.id);\n        if (!isNaN(id)) this.props.fetchProjectsByLanguage(id);\n    }\n\n    renderError = () => {\n        return (\n            <div className=\"ui red message\">\n                <p>No projects found for provided language.</p>\n            </div>\n        );\n    };\n\n    renderProjects = () => (\n        <div className=\"ui basic segment\">\n            <div className=\"ui link cards\">\n                {this.props.projects.map((project) => (\n                    <ProjectCard key={project.id} project={project} />\n                ))}\n            </div>\n        </div>\n    );\n\n    render() {\n        if (this.props.projectsCount <= 0) return this.renderError();\n\n        return this.renderProjects();\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    const id = parseInt(ownProps.match.params.id);\n    const projects = state.projects.filter(\n        (project) => project.language === id\n    );\n    return { projects: projects, projectsCount: projects.length };\n};\n\nexport default connect(mapStateToProps, { fetchProjectsByLanguage })(Projects);\n","import React from \"react\";\n\nconst NotFound = () => {\n    return (\n        <div className=\"ui basic segment\">\n            <img\n                alt=\"logo\"\n                className=\"ui medium centered circular image\"\n                src={`${window.location.origin}/images/logo.svg`}\n            />\n            <div className=\"ui red message\">\n                <h2 className=\"header\">\n                    The page you requested is not available.\n                </h2>\n            </div>\n            <div className=\"ui red message\">\n                <h2 className=\"header\">\n                    If you think this is an error, please report me.\n                </h2>\n            </div>\n\n            <div className=\"ui card\">\n                <div className=\"content\">\n                    <address>\n                        <p>\n                            <span>Email: </span>\n                            <a href=\"mailto:dev.jayantmalik@gmail.com\">\n                                <strong>dev.jayantmalik@gmail.com</strong>\n                            </a>\n                        </p>\n                        <p>\n                            <span>Github: </span>\n                            <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/devjayantmalik\">\n                                <strong>github.com/devjayantmalik</strong>\n                            </a>\n                        </p>\n                    </address>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default NotFound;\n","import React from 'react';\n\nimport {HashRouter, Route, Switch} from 'react-router-dom';\n\nimport Header from './common/Header';\nimport Home from './home/Home';\nimport About from './about/About';\nimport Projects from './projects/Projects';\nimport NotFound from './NotFound';\n\nconst Router = () => {\n    return(\n        <HashRouter>\n        <Header />\n        <Switch>\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/about\" exact component={About} />\n          <Route path=\"/language/:id\" exact component={Projects} />\n          <Route path=\"*\" exact component={NotFound} />\n        </Switch>\n\n      </HashRouter>\n    )\n}\n\nexport default Router;","import React from 'react';\n\nimport Router from './Router';\n\n\n\nconst App = () => {\n  return (\n    <div className=\"ui basic segment\">\n      <Router />\n    </div>\n  )\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {combineReducers} from 'redux';\n\nimport languagesReducer from './languagesReducer';\nimport projectsReducer from './projectsReducer';\n\nexport default combineReducers({\n    languages: languagesReducer,\n    projects: projectsReducer\n})","import {FETCH_LANGUAGES} from '../actions/types';\n\nexport default (state = [], action) => {\n    // state: list of languages\n    switch(action.type){\n        case FETCH_LANGUAGES:\n            return action.payload;\n        default:\n            return state;\n    }\n}","import {FETCH_PROJECTS, FETCH_PROJECTS_BY_LANGUAGE} from '../actions/types';\n\nexport default (state = [], action) => {\n    // state: list of projects\n    switch(action.type){\n        case FETCH_PROJECTS:\n            return action.payload;\n        case FETCH_PROJECTS_BY_LANGUAGE:\n            return action.payload;\n        default:\n            return state;\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nimport {Provider} from 'react-redux';\nimport {createStore} from 'redux';\n\nimport reducers from './reducers';\n\nconst store = createStore(reducers);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}